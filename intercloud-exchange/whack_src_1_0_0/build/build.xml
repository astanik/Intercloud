<?xml version="1.0"?>

<!-- Whack Build Script ========================================== -->
<!-- Jive Software      ============================================== -->

<!--
    $RCSfile$
    $Revision: 10672 $
    $Date: 2008-07-14 13:50:36 -0700 (Mon, 14 Jul 2008) $
-->

<project name="Whack" default="all" basedir="..">

    <!-- TASKDEFS -->
    <!-- ======================================================================================= -->
    <!-- ======================================================================================= -->

    <taskdef resource="net/sf/antcontrib/antcontrib.properties">
        <classpath>
            <pathelement location="${basedir}/build/ant-contrib.jar"/>
        </classpath>
    </taskdef>

    <!-- PROPERTIES -->
    <!-- ======================================================================================= -->

    <!-- Whack Version -->
    <property name="version.major" value="1" />
    <property name="version.minor" value="0" />
    <property name="version.revision" value="0" />
    <property name="version.extra" value="" /> 

    <if>
        <equals arg1="${version.extra}" arg2=""/>
        <then>
            <property name="version"
                      value="${version.major}.${version.minor}.${version.revision}"/>
            <property name="version.filename"
                      value="${version.major}_${version.minor}_${version.revision}"/>
        </then>
        <else>
            <property name="version"
                      value="${version.major}.${version.minor}.${version.revision}.${version.extra}"/>
            <property name="version.filename"
                      value="${version.major}_${version.minor}_${version.revision}_${version.extra}"/>
        </else>
    </if>
    <tstamp>
        <format property="builddate" pattern="MM/dd/yyyy"/>
    </tstamp>

    <property file="${basedir}/build/build.properties" />
    <property name="compile.dir" value="${basedir}/target/classes" />
    <property name="compile.test.dir" value="${basedir}/target/classes-test" />
    <property name="jar.dest.dir" value="${basedir}/target" />
    <property name="javadoc.dest.dir" value="${basedir}/target/javadoc" />
    <property name="lib.dir" value="${basedir}/build/lib" />
    <property name="dist.lib.dir" value="${lib.dir}/dist" />
    <property name="merge.lib.dir" value="${lib.dir}/merge" />
    <property name="test.dir" value="${basedir}/test" />
    <property name="resources.dir" value="${basedir}/build/resources" />

    <!-- PATHS, DEPENDIENCIES, PATTERNS -->
    <!-- ======================================================================================= -->
    <!-- ======================================================================================= -->

    <patternset id="test.cases">
        <include name="org/jivesoftware/whack/**/*Test.java" />
        <exclude name="org/jivesoftware/whack/**/Messenger*Test.java" />
    </patternset>

    <patternset id="messenger.test.cases">
        <include name="org/jivesoftware/whack/**/Messenger*Test.java" />
    </patternset>

    <!-- TARGETS -->
    <!-- ======================================================================================= -->

    <!-- all -->
    <!-- ======================================================================================= -->
    <target name="all" depends="jar" description="Calls 'jar' target by default">
    </target>

    <!-- compile -->
    <!-- ======================================================================================= -->
    <target name="compile" description="Compiles all source to ${compile.dir}.">
        <!-- make target dir -->
        <mkdir dir="${compile.dir}" />
        <javac
            destdir="${compile.dir}"
            includeAntRuntime="no"
            debug="on"
            source="1.5"
            target="1.5"
        >
            <src path="${basedir}/source" />
            <classpath>
                <fileset dir="${dist.lib.dir}">
                    <include name="*.jar"/>
                </fileset>
                <fileset dir="${merge.lib.dir}">
                    <include name="*.jar"/>
                </fileset>
            </classpath>
        </javac>		
    </target>

    <!-- compile-test -->
    <!-- ======================================================================================= -->
    <target name="compile-test" description="Compiles all source to ${compile.dir}.">
        <!-- make target dir -->
        <mkdir dir="${compile.test.dir}" />
        <javac
            destdir="${compile.test.dir}"
            includeAntRuntime="no"
            debug="on"
            source="1.5"
            target="1.5"
        >
            <src path="${test.dir}" />
            <classpath>
                <fileset dir="${merge.lib.dir}">
                    <include name="*.jar"/>
                </fileset>
                <fileset dir="${basedir}/build">
                    <include name="junit.jar"/>
                    <include name="xmlunit.jar"/>
                </fileset>
                <pathelement location="${compile.dir}" />
            </classpath>
        </javac>
    </target>

    <!-- jar -->
    <!-- ======================================================================================= -->
    <target name="jar" depends="compile" unless="jar.uptodate" description="Produces whack.jar">
        <jar destfile="${jar.dest.dir}/whack.jar"
            basedir="${compile.dir}"
            includes="org/jivesoftware/whack/**/*.class"
        />
    </target>

    <!-- jar -->
    <!-- ======================================================================================= -->
    <target name="jar-test" depends="compile-test" description="Produces jar of test code">
        <jar destfile="${jar.dest.dir}/whack-test.jar"
            basedir="${compile.test.dir}"
            includes="org/jivesoftware/whack/**/*.class"
        />
    </target>

    <!-- javadoc -->
    <!-- ======================================================================================= -->
    <target name="javadoc" description="JavaDocs the Whack source code">

        <mkdir dir="${javadoc.dest.dir}" />
        <javadoc
            packagenames="org.jivesoftware.whack.*"
            sourcepath="${basedir}/source/java"
            destdir="${javadoc.dest.dir}"
            author="true"
            windowtitle="Whack ${version} Documentation"
        >
            <classpath>
                <fileset dir="${dist.lib.dir}">
                    <include name="*.jar"/>
                </fileset>
                <fileset dir="${merge.lib.dir}">
                    <include name="*.jar"/>
                </fileset>
            </classpath>
            <doctitle><![CDATA[<font face="arial,helvetica">Whack ${version}</font>]]></doctitle>
            <header><![CDATA[<b>Whack</b>]]></header>
            <bottom><![CDATA[<i>Copyright &copy; 2003-2008 Jive Software. </i>]]></bottom>
            <link href="http://java.sun.com/j2se/1.3/docs/api/" />
            <link href="http://java.sun.com/j2ee/sdk_1.2.1/techdocs/api/" />
        </javadoc>
    </target>


    <!-- test -->
    <!-- ======================================================================================= -->
    <target name="func-test" depends="compile, jar-test" unless="no.test">
        <antcall target="test.messenger"/>
        <antcall target="test"/>
    </target>


    <!-- test -->
    <!-- ======================================================================================= -->
    <target name="test" depends="compile, jar-test" unless="no.test">

        <echo>


            **** no.test: ${no.test}


        </echo>

        <property name="test.messenger" value="false" />

        <if>
            <not><equals arg1="test.messenger" arg2="true" /></not>
            <then>
                <property name="test.classes" value="test.cases" />
            </then>
        </if>

        <junit printsummary="on"
            fork="true"
            haltonfailure="false"
            failureproperty="tests.failed"
            showoutput="true">

            <sysproperty key="whack.test.host" value="${test.host}" />
            <sysproperty key="whack.test.port" value="${test.port}" />
            <sysproperty key="whack.test.admin.username" value="${test.admin.username}" />
            <sysproperty key="whack.test.admin.password" value="${test.admin.password}" />
            <sysproperty key="whack.test.admin.resource" value="${test.admin.resource}" />
            <sysproperty key="whack.debug" value="${test.whack.debug}" />

            <classpath>
                <fileset dir="${basedir}/build">
                    <include name="xmlunit.jar"/>
                </fileset>
                <fileset dir="${merge.lib.dir}">
                    <include name="*.jar"/>
                </fileset>
                <fileset dir="${basedir}">
                    <include name="whack-test.jar"/>
                </fileset>
                <pathelement location="${compile.dir}" />
                <pathelement location="${test.dir}" />
                <pathelement location="${resources.dir}" />
            </classpath>

            <formatter type="brief" usefile="false"/>

            <batchtest>
                <fileset dir="${basedir}/test">
                    <patternset refid="${test.classes}" />
                </fileset>
            </batchtest>
        </junit>

        <fail if="tests.failed" message="** Tests failed, see test log. **" />
    </target>


    <!-- test -->
    <!-- ======================================================================================= -->
    <target name="test.messenger" depends="compile, jar-test" unless="no.test">
        <antcall target="test" inheritall="true" inheritrefs="true">
            <param name="test.messenger" value="true" />
            <param name="test.classes" value="messenger.test.cases" />
        </antcall>
    </target>


    <!-- release -->
    <!-- ======================================================================================= -->
    <target name="release" description="Builds a release" if="release.exists" depends="release-exists">
        <antcall target="jar">
            <param name="no.test" value="true" />
        </antcall>
        <antcall target="javadoc">
            <param name="no.test" value="true" />
        </antcall>
        <ant antfile="${basedir}/build/release.xml" />
    </target>


    <!-- release-exists -->
    <!-- ======================================================================================= -->
    <target name="release-exists" >
        <available file="${basedir}/build/release.xml" property="release.exists"/>
    </target>


    <!-- clean -->
    <!-- ======================================================================================= -->
    <target name="clean" description="Deletes all generated content.">
    	<delete dir="${javadoc.dest.dir}" />
        <delete dir="${compile.dir}" />
        <delete dir="${compile.test.dir}" />
        <delete file="${basedir}/whack.jar" />
        <delete file="${basedir}/whack-test.jar" />
        <delete dir="${basedir}/target" />
    </target>

</project>
